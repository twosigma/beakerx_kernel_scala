name: Conda package test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Cache gradle
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache Conda
      uses: actions/cache@v1
      with:
        path: ~/.conda
        key: ${{ runner.os }}-mconda-${{ hashFiles('**/configuration.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-          
    - name: Set up Conda
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: "latest"
    - name: Verify conda version
      shell: bash -l {0}
      run: conda --version
    - name: Checkout beakerx_kernel_base repo
      uses: actions/checkout@v2
      with:
        repository: twosigma/beakerx_kernel_base
        path: beakerx_kernel_base
    - name: Build BeakerX Kernel Base
      run: |
        cd $GITHUB_WORKSPACE/beakerx_kernel_base
        chmod +x gradlew
        ./gradlew install
    - name: Update conda package
      shell: bash -l {0}
      run: |
        cd scala-dist
        conda env create -n beakerx -f configuration.yml
    - name: Build BeakerX Scala Kernel
      shell: bash -l {0}
      run: |
        chmod +x gradlew
        cd scala-dist
        conda activate beakerx
        pip install -r requirements.txt --verbose
        beakerx_kernel_scala install
    - name: Checkout beakerx_tests repo
      uses: actions/checkout@v2
      with:
        repository: twosigma/beakerx_tests
        path: beakerx_tests 
    - name: Run e2e tests (Scala kernel)
      shell: bash -l {0}
      run: |
        cd $GITHUB_WORKSPACE/beakerx_tests/autotests
        chmod +x gradlew
        conda activate beakerx
        pip install psutil
        python ci_tests.py --app=notebook --tst=scala.* 
    - name: Publish Test Report
      if: ${{ always() }}
      uses: scacap/action-surefire-report@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: "**/test-results/test/TEST-*.xml"
